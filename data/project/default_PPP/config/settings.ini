#--------------------------------------------------------------------------------
[PROJECT]
#--------------------------------------------------------------------------------
# Name of the project
prj_name = "Default PPP project"
# Home of the project
prj_home = "../data/project/default_PPP/"

#--------------------------------------------------------------------------------
[DEPRECATE]
#--------------------------------------------------------------------------------
# Deprecate ini - path - it contains some additional setting (yet not imported in the new settings system)
input_file_ini_path = "../data/project/default_PPP/config/inputFiles.ini"

#--------------------------------------------------------------------------------
[INPUT_SAT]
#--------------------------------------------------------------------------------
# Directory of Ephemeris files
eph_dir = "../data/satellite/EPH/"
# Directory of clock offset files
clk_dir = "../data/satellite/CLK/"
# Directory of CRX files (containing satellite problems)
crx_dir = "../data/satellite/CRX/"
# Directory of DCB files (Differential Code Biases)
dcb_dir = "../data/satellite/DCB/"
# Directory of EMS files (EGNOS Message Server).
ems_dir = "../data/satellite/SBAS/EMS/"

#--------------------------------------------------------------------------------
[INPUT_STATIONS]
#--------------------------------------------------------------------------------
# Directory of coordinates files
crd_dir = "../data/stations/CRD/"
# Directory of metereological data
met_dir = "../data/stations/MET/"
# Directory of ocean loading files
ocean_dir = "../data/stations/ocean/"

#--------------------------------------------------------------------------------
[INPUT_REF]
#--------------------------------------------------------------------------------
# Directory of Geoid files
geoid_dir = "../data/reference/geoid/"
# Directory of DTM data
dtm_dir = "../data/reference/dtm/"

#--------------------------------------------------------------------------------
[INPUT_UI]
#--------------------------------------------------------------------------------
# Directory of images for UI
img_dir = "../data/img/"
# Path to the image of the logo 64x64 px
img_logo64 = "../data/img/goGPS_logo_64.png"

#--------------------------------------------------------------------------------
[OUTPUT]
#--------------------------------------------------------------------------------
# Output style
out_style = 0
#  0: old goGPS naming - each file saved with run number in out_dir
#  1: run naming - each file saved in a folder containing the run number in out_dir
#  2... other values for future implementation, e.g. each output in a folder with a certain format (doy_hh-hh)

# out_style = 0 -> Directory containing the basic output folder of the project - path relative to goGPS folder
# out_style = 1 -> Directory containing the basic output folder of the project - path relative to home folder
out_dir = "../data/project/default_PPP/out"
# out_style = 0 -> Every time a solution is computed a file with prefix followed by the run number is created
# out_style = 1 -> Every time a solution is computed a folder with prefix followed by the run number is created and the outputs are stored into it
out_prefix = "zimm_PPP"
# Current run number
run_counter = 0


#--------------------------------------------------------------------------------
[RECEIVERS]
#--------------------------------------------------------------------------------
# Default STD of code observations [m]
std_code = 0.3
# Default STD of phase observations [m]
std_phase = 0.003
# Default STD of iono-free phase observations [m
std_phase_if = 0.009
# Default STD of a priori receiver clock
sigma0_clock = 4.47e-09
# Default STD of receiver clock
sigma0_r_clock = 31

# Read master position from RINEX (0/1)
flag_rinex_mpos = 1
# Default Master position (this values are read when not specified elsewhere)
mpos_XYZ = [0 0 0]

#--------------------------------------------------------------------------------
[DATA_SELECTION]
#--------------------------------------------------------------------------------
# Constallations for the processing:
# GPS satellite system
GPS_is_active = 1
# Frequencies to be used when this constellation is active
GPS_L1 = 1
GPS_L2 = 1
GPS_L5 = 0

# GLONASS satellite system
GLO_is_active = 0
# Frequencies to be used when this constellation is active
GLO_R1 = 0
GLO_R2 = 0
GLO_R3 = 0

# Galileo satellite system
GAL_is_active = 0
# Frequencies to be used when this constellation is active
GAL_E1 = 0
GAL_E5a = 0
GAL_E5b = 0
GAL_E5 = 0
GAL_E6 = 0

# BeiDou satellite system
BDS_is_active = 0
# Frequencies to be used when this constellation is active
BDS_C2 = 0
BDS_C5b = 0
BDS_C6 = 0
BDS_C1 = 0

# QZSS satellite system
QZS_is_active = 0
# Frequencies to be used when this constellation is active
QZS_J1 = 0
QZS_J2 = 0
QZS_J5 = 0
QZS_J6 = 0

# SBAS satellite system
SBS_is_active = 0
# Frequencies to be used when this constellation is active
SBS_L1 = 0
SBS_L2 = 0

# Processing using a minimum rate of [s]:
p_rate = 30
# Minimum number of satellite per epoch
min_n_sat = 2
# Cut-off [degrees]
cut_off = 10
# Signal-to-noise ratio threshold [dB]
snr_thr = 10
# Enable ocean tides modeling (0/1)
flag_ocean = 1
# Minimum length an arc (a satellite to be used must be seen for a number of consecutive epochs equal or greater than this value)
min_arc = 10

#--------------------------------------------------------------------------------
[PRE_PROCESSING]
#--------------------------------------------------------------------------------
# Enable pre-processing (0/1)
flag_pre_pro = 1
# Cycle slip threshold [cycles]
cs_thr_pre_pro = 1

#--------------------------------------------------------------------------------
[OUTLIER_DETECTION]
#--------------------------------------------------------------------------------
# Enable outlier detection (0/1)
flag_outlier = 1
# Threshold on code LS estimation error [m]
pp_spp_thr = 4
# Threshold on maximum residual of code obs [m]
pp_max_code_err_thr = 30
# Threshold on maximum residual of phase obs [m]
pp_max_phase_err_thr = 0.05

#--------------------------------------------------------------------------------
[PROCESSING]
#--------------------------------------------------------------------------------
# Processing using mode:
p_mode = 4
#  24: Real Time Navigation (Kalman Filter on Code and Phase Double Differences (with/without a constraint)
#  21: Real Time Rover Monitor
#  22: Real Time Master Monitor
#  23: Real Time Master + Rover Monitor
#  01: Post Proc Least Squares on Code Stand Alone
#  03: Post Proc Least Squares on Code and Phase Stand Alone
#  05: Post Proc Least Squares on Code and Phase for Velocity estimation
#  11: Post Proc Least Squares on Code Double Differences
#  13: Post Proc Least Squares on Code and Phase Double Differences with LAMBDA
#  16: Post Proc Least Squares on Code and Phase Double Differences, Multiple Receivers
#  17: Post Proc Least Squares on Code Stand Alone, Multiple Receivers
#  02: Post Proc Kalman Filter on Code Stand Alone
#  12: Post Proc Kalman Filter on Code Double Differences
#  04: Post Proc Kalman Filter on Code and Phase Stand Alone (PPP)
#  14: Post Proc Kalman Filter on Code and Phase Double Differences
#  15: Post Proc Kalman Filter on Code and Phase Double Differences, Multiple Receivers (SEID - only rinex writing)
#  18: SEID followed by PPP (Kalman Filter on Code and Phase Stand Alone (PPP)) it is both stand alone and DD

# Compute tropospheric indicators (e.g. ZTD):
flag_tropo = 1
# Processing using weighting mode:
w_mode = 1
#  0: same weight for all the observations
#  1: weight based on satellite elevation (sin)
#  2: weight based on satellite elevation (exp)
#  3: weight based on signal-to-noise ratio
#  4: weight based on combined elevation and signal-to-noise ratio

# Weight function parameters (when based on SNR): a / 0 / 1 / A
w_snr = [30 10 10 30]
# Cycle slip threshold (processing) [cycles]
cs_thr = 1
# Enable usage of iono-free combination in PPP (0/1)
flag_ionofree = 1
# Constrain the solution using a reference path
constrain = 0
# Enable / Disable stop go stop mode option (0/1)
stop_go_stop = 0

#--------------------------------------------------------------------------------
[AMBIGUITY]
#--------------------------------------------------------------------------------
# Use integer ambiguity resolution (0/1)
flag_iar = 0

# Ambiguity restart mode
iar_restart_mode = 1
#  0: Observed code - phase difference
#  1: Kalman-predicted code - phase difference
#  2: Least squares adjustment
# Ambiguity detection mode
iar_mode = 0
#  0: ILS method with numeration in search (LAMBDA2)
#  1: ILS method with shrinking ellipsoid during search (LAMBDA3)
#  2: ILS method with numeration in search (LAMBDA3)
#  3: integer rounding method (LAMBDA3)
#  4: integer bootstrapping method (LAMBDA3)
#  5: Partial Ambiguity Resolution (PAR) (LAMBDA3)

# User defined fixed failure rate (methods 1,2) / user defined minimum success rate (for method 5)
iar_p0 = 0.001
# STD of a priori ambiguity combinations [cycles]
sigma0_N = 31
# User defined threshold for ratio test
iar_mu = 0.5
# Automatic determination of mu (0/1)
flag_iar_auto_mu = 1
# Use default value for P0 (0/1)
flag_iar_default_p0 = 1
# Use Doppler-predicted phase range for detecting cycle slips (0/1)
flag_doppler = 0

#--------------------------------------------------------------------------------
[KALMAN_FILTER]
#--------------------------------------------------------------------------------
# Order of the KF
kf_order = 0
# When capture/monitor modes are in use
#  0: constant
#  1: variable
# When post processing is in use:
#  0: static
#  1: constant velocity
#  2: constant acceleration
#  3: variable (stop-go-stop)

# STD of initial state [m]
sigma0_k_pos = 0.1
# STD of ENU variation [m] / [m/s] / [m/s^2]
std_k_ENU = [0.5 0.5 0.1]
# STD of 3D modulus variation [m] / [m/s] / [m/s^2]
std_k_vel_mod = 1
# STD of a priori tropospheric delay
sigma0_tropo = 0.1
# STD of tropospheric delay
std_tropo = 0.00045644

#--------------------------------------------------------------------------------
[ATMOSPHERE]
#--------------------------------------------------------------------------------
# Ionospheric model
iono_model = 2
#  0: no model
#  1: Geckle and Feen model
#  2: Klobuchar model
#  3: SBAS grid

# Tropospheric model
tropo_model = 2
#  0: no model
#  1: Saastamoinen model (with standard atmosphere parameters)
#  2: Saastamoinen model (with Global Pressure Temperature model)

#--------------------------------------------------------------------------------
[DTM]
#--------------------------------------------------------------------------------
# Use DTM (0/1)
flag_dtm = 0
# STD of DEM model [m]
std_dtm = 1e+30
# Elevation of the antenna above ground [m]
antenna_h = 0

#--------------------------------------------------------------------------------
[UI]
#--------------------------------------------------------------------------------
# Plot during processing (0/1)
plot_proc = 0
# Plot reference during processing (0/1)
plot_ref_path = 0
# Plot sky plot during processing (0/1)
plot_skyplot_snr = 0
# Plot error_ellipse (0/1)
plot_err_ellipse = 0
# Plot ambiguities (0/1)
plot_ambiguities = 0
# Plot master station (0/1)
plot_master = 0
# Plot on google earth (0/1)
plot_google_earth = 0

#--------------------------------------------------------------------------------
[CAPTURE]
#--------------------------------------------------------------------------------
# Number of receivers for capturing data
c_n_receivers = 1
# Capture rate
c_rate = 1

# Protocol for receiver 1
c_prtc_01 = 1
#  1: UBX (u-blox)
#  2: iTalk (Fastrax)
#  3: SkyTraq
#  4: BINR (NVS)

# COM address for receiver 1
c_com_addr_01 = "/dev/tty.lpss-serial1"


#--------------------------------------------------------------------------------
[NTRIP]
#--------------------------------------------------------------------------------
# Use NTRIP protocol (0/1)
flag_ntrip = 1
# Here the NTRIP server parameters will follow (ip_addr, port, mountpoint, user, password, approximate_position):
ip_addr = "127.0.0.1"
port = "2101"
mountpoint = "/"
username = "user"
password = ""
# Approximate position [degrees / degrees / m]:
ntrip_lat = 0
ntrip_lon = 0
ntrip_h = 0

